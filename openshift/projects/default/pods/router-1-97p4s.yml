apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/deployment-config.latest-version: "1"
    openshift.io/deployment-config.name: router
    openshift.io/deployment.name: router-1
    openshift.io/scc: hostnetwork
  creationTimestamp: null
  generateName: router-1-
  labels:
    deployment: router-1
    deploymentconfig: router
    router: router
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: router-1
    uid: 5e23545c-bd98-11e8-89cd-0253a4143ad0
spec:
  containers:
  - env:
    - name: DEFAULT_CERTIFICATE_DIR
      value: /etc/pki/tls/private
    - name: DEFAULT_CERTIFICATE_PATH
      value: /etc/pki/tls/private/tls.crt
    - name: ROUTER_CIPHERS
    - name: ROUTER_EXTERNAL_HOST_HOSTNAME
    - name: ROUTER_EXTERNAL_HOST_HTTPS_VSERVER
    - name: ROUTER_EXTERNAL_HOST_HTTP_VSERVER
    - name: ROUTER_EXTERNAL_HOST_INSECURE
      value: "false"
    - name: ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS
    - name: ROUTER_EXTERNAL_HOST_PARTITION_PATH
    - name: ROUTER_EXTERNAL_HOST_PASSWORD
    - name: ROUTER_EXTERNAL_HOST_PRIVKEY
      value: /etc/secret-volume/router.pem
    - name: ROUTER_EXTERNAL_HOST_USERNAME
    - name: ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR
    - name: ROUTER_LISTEN_ADDR
      value: 0.0.0.0:1936
    - name: ROUTER_METRICS_TYPE
      value: haproxy
    - name: ROUTER_SERVICE_HTTPS_PORT
      value: "443"
    - name: ROUTER_SERVICE_HTTP_PORT
      value: "80"
    - name: ROUTER_SERVICE_NAME
      value: router
    - name: ROUTER_SERVICE_NAMESPACE
      value: default
    - name: ROUTER_SUBDOMAIN
    - name: STATS_PASSWORD
      value: MdS18ea5RO
    - name: STATS_PORT
      value: "1936"
    - name: STATS_USERNAME
      value: admin
    image: registry.access.redhat.com/openshift3/ose-haproxy-router:v3.9.27
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        host: localhost
        path: /healthz
        port: 1936
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: router
    ports:
    - containerPort: 80
      hostPort: 80
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      protocol: TCP
    - containerPort: 1936
      hostPort: 1936
      name: stats
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: localhost
        path: /healthz
        port: 1936
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      runAsUser: 1000000000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/pki/tls/private
      name: server-certificate
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: router-token-wvt4j
      readOnly: true
  dnsPolicy: ClusterFirst
  hostNetwork: true
  imagePullSecrets:
  - name: router-dockercfg-wgtsq
  nodeName: ip-172-31-25-38.eu-central-1.compute.internal
  nodeSelector:
    region: infra
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000000000
    seLinuxOptions:
      level: s0:c1,c0
    supplementalGroups:
    - 1000000000
  serviceAccount: router
  serviceAccountName: router
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: server-certificate
    secret:
      defaultMode: 420
      secretName: router-certs
  - name: router-token-wvt4j
    secret:
      defaultMode: 420
      secretName: router-token-wvt4j
status:
  phase: Pending
  qosClass: Burstable
